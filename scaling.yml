- hosts: cluster_login
  become: yes
  tasks:
    - name: get deployment user name
      become: false
      local_action: command whoami
      register: ansible_host_whoami
      changed_when: false
    - set_fact: ansible_host_username="{{ansible_host_whoami.stdout_lines[0]}}"
      changed_when: false
    - debug:
        var: ansible_host_username
    - name: setup an ssh key for (existing) slurm user
      user:
        name: slurm
        shell: /bin/bash # don't like this, was /sbin/nologin but need to run ssh
        create_home: yes # default, but needs creating
        generate_ssh_key: yes
      register: slurm_user
    - name: slurp slurm key
      slurp:
        src: "{{ slurm_user.home }}/.ssh/id_rsa.pub"
      register: slurmkey
    - set_fact:
        slurm_key: "{{ slurmkey.content | b64decode | replace('\n', '') }}"
    - name: create resume script
      template:
        src: slurmscripts/resume.j2
        dest: "{{ slurm_user.home }}/resume.sh"
        owner: slurm
        mode: 0744
    - name: create suspend script
      template:
        src: slurmscripts/suspend.j2
        dest: "{{ slurm_user.home }}/suspend.sh"
        owner: slurm
        mode: 0744
    - name: Get ansible/tf control host's SSH key
      command: "ssh-keyscan -t rsa {{ control_host }}"
      register: control_host_keys
      changed_when: False
    - name: add ansible/tf control host's keys to known hosts
      blockinfile:
        block: |
          {% for line in control_host_keys.stdout_lines %}
          {{ line }}
          {% endfor %}
        create: true
        marker: "# {mark} MANAGED BLOCK FOR ansible control host"
        path: "{{ slurm_user.home }}/.ssh/known_hosts"
#      loop: "{{ hostvars['localhost']['ssh_keys'] }}"
      
- hosts: localhost
  tasks:
    - name: add slurm login node key to localhost authorised keys
      lineinfile:
        path: /home/{{ ansible_user }}/.ssh/authorized_keys # fragile for user home directory location?
        state: present
        line: "{{ hostvars[groups['ohpc_login'][0]]['slurm_key'] }}" # TODO: not sure this is the right way to ref this host??
        #regexp: "{{ hostvars['ohpc-login']['slurm_key'] }}"
    - name: create reconfigure script on ansible/tf control host
      template:
        src: "{{ playbook_dir }}/slurmscripts/reconfigure.j2"
        dest: "{{ playbook_dir }}/slurmscripts/reconfigure.py"
        mode: 0744
        
- hosts:
  - cluster_control
  - cluster_batch
  become: yes
  tasks:
    - name: Ensure Slurm services are running
      service:
        name: "{{ openhpc_slurm_service }}" # set by stackhpc.openhpc role
        state: "started"
      when:
        - openhpc_slurm_service is defined
        - openhpc_slurm_service is not none
